using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using XoSoKienThiet.BUS;
using System.Data.Entity;
using XoSoKienThiet.DTO;

namespace XoSoKienThiet.Presentation
{
    public partial class frmPhieuTraVe : DevExpress.XtraEditors.XtraForm
    {
        DOITAC_BUS _DOITAC_BUS = null;
        NHANVIEN_BUS _NHANVIEN_BUS = null;
        string _MaPhieuNhanVe = "", _MaDoiTac = "";
        public frmPhieuTraVe()
        {
            InitializeComponent();
            _DOITAC_BUS = new DOITAC_BUS();
            _NHANVIEN_BUS = new NHANVIEN_BUS();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            XoSoKienThiet.DTO.XoSoKienThietDbContext dbContext = new XoSoKienThiet.DTO.XoSoKienThietDbContext();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.PHIEUNHANVE_DOITAC_VIEWs.Load();
            // This line of code is generated by Data Source Configuration Wizard
            bindingMaPhieuNhanVe.DataSource = dbContext.PHIEUNHANVE_DOITAC_VIEWs.Local.ToBindingList();
        }
        private void frmPhieuTraVe_Load(object sender, EventArgs e)
        {
            #region Init lookup nhân viên
            var _ListNhanVien = _NHANVIEN_BUS.Select();
            lkNguoiLap.Properties.DataSource = _ListNhanVien;
            lkNguoiLap.Properties.DisplayMember = "Ten";
            lkNguoiLap.Properties.ValueMember = "MaNhanVien";

            lkNguoiLap.Properties.ForceInitialize();
            lkNguoiLap.Properties.PopulateColumns();

            lkNguoiLap.Properties.Columns["MaCoCauToChuc"].Visible = false;
            lkNguoiLap.Properties.Columns["DiaChi"].Visible = false;
            lkNguoiLap.Properties.Columns["Email"].Visible = false;
            lkNguoiLap.Properties.Columns["SDT"].Visible = false;
            #endregion

        }

        private void btnDong_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Close();
        }

        private void lkMaPhieuNhanVe_EditValueChanged(object sender, EventArgs e)
        {
            txtTenDoiTac.Text = lkMaPhieuNhanVe.Properties.GetDataSourceValue("Ten", lkMaPhieuNhanVe.ItemIndex).ToString();
            _MaDoiTac = lkMaPhieuNhanVe.Properties.GetDataSourceValue("MaDoiTac", lkMaPhieuNhanVe.ItemIndex).ToString();
            _MaPhieuNhanVe = lkMaPhieuNhanVe.Properties.GetDataSourceValue("MaPhieuNhanVe", lkMaPhieuNhanVe.ItemIndex).ToString();
            #region #Hiển thị dữ liệu lên gridview
            XoSoKienThiet.DTO.XoSoKienThietDbContext dbContext = new XoSoKienThiet.DTO.XoSoKienThietDbContext();
            string MaPhieuNhanVe = lkMaPhieuNhanVe.Properties.GetDataSourceValue("MaPhieuNhanVe", lkMaPhieuNhanVe.ItemIndex).ToString();
            // Lấy danh sách chi tiết phiếu đăng ký có mã phiếu nhận như trên
            var List_CT_PDKC = from p in dbContext.CT_PHIEUNHANVE_VIEW
                               where p.MaPhieuNhanVe == MaPhieuNhanVe && p.DaTra == false
                               select p;

            List<CT_PHIEUTRAVE_VIEW> List_CT_PhieuTraVe = new List<CT_PHIEUTRAVE_VIEW>();
            foreach (var item in List_CT_PDKC)
            {
                //Gán những thuộc tính có sẵn
                CT_PHIEUTRAVE_VIEW phieunhanve_view = new CT_PHIEUTRAVE_VIEW();
                phieunhanve_view.MaDoiTac = item.MaDoiTac;
                phieunhanve_view.MaDotPhatHanh = item.MaDotPhatHanh;
                phieunhanve_view.MaLoaiVe = item.MaLoaiVe;
                phieunhanve_view.Ten = item.Ten;
                phieunhanve_view.NgayPhatHanh = item.NgayPhatHanh;
                phieunhanve_view.MenhGia = item.MenhGia;
                phieunhanve_view.SoVeNhan = item.SoLuongNhan;
                List_CT_PhieuTraVe.Add(phieunhanve_view);

                List_CT_PhieuTraVe.Add(phieunhanve_view);
            }
            gcBASE.DataSource = List_CT_PhieuTraVe;
            //set default value SoVeTra

            #endregion
        }

        private void gvBASE_ValidatingEditor(object sender, DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs e)
        {
            int SoVeTra = 0;
            if (!Int32.TryParse(e.Value as String, out SoVeTra))
            {
                e.Valid = false;
                e.ErrorText = "Số vé trả là số nguyên dương";
            }
            else
            {
                if (SoVeTra > Convert.ToInt32(gvBASE.GetRowCellValue(gvBASE.FocusedRowHandle, gvBASE.Columns["SoVeNhan"])))
                {
                    e.Valid = false;
                    e.ErrorText = "Số vé trả không lớn hơn số vé nhận";
                }
            }
        }
        private void gvBASE_CellValueChanging(object sender, DevExpress.XtraGrid.Views.Base.CellValueChangedEventArgs e)
        {
            int SoTienPhaiTra = 0;
            int SoLuongNhan = 0;
            if (gvBASE.FocusedColumn.FieldName == "SoVeTra")
            {
                int SoVeTra = 0;
                if (Int32.TryParse(e.Value as String, out SoVeTra))
                {
                    SoLuongNhan = Convert.ToInt32(gvBASE.GetRowCellValue(gvBASE.FocusedRowHandle, gvBASE.Columns["SoVeNhan"]));
                    if (e.Value != "" && Convert.ToInt32(e.Value) <= SoLuongNhan)
                    {
                        int MenhGia = Convert.ToInt32(gvBASE.GetRowCellValue(gvBASE.FocusedRowHandle, gvBASE.Columns["MenhGia"]));
                        float TiLeHoaHong = _DOITAC_BUS.GetPercentage(_MaDoiTac);
                        SoTienPhaiTra = Convert.ToInt32((SoLuongNhan - Convert.ToInt32(e.Value)) * MenhGia * (1 - TiLeHoaHong));
                        gvBASE.SetRowCellValue(gvBASE.FocusedRowHandle, gvBASE.Columns["SoTienPhaiTra"], SoTienPhaiTra);
                    }
                    else
                    {
                        gvBASE.SetRowCellValue(gvBASE.FocusedRowHandle, gvBASE.Columns["SoTienPhaiTra"], 0);
                    }
                    int TongSoLuongTra = 0, TongSoTienTra = 0;
                    for (int i = 0; i < gvBASE.RowCount; i++)
                    {
                        if (i != gvBASE.FocusedRowHandle)
                        {
                            try
                            {
                                TongSoLuongTra += Convert.ToInt32(gvBASE.GetRowCellValue(i, gvBASE.Columns["SoVeTra"]));
                                TongSoTienTra += Convert.ToInt32(gvBASE.GetRowCellValue(i, gvBASE.Columns["SoTienPhaiTra"]));
                            }
                            catch
                            {
                                // bắt lỗi khi giá trị ở cột đó null
                            }
                        }

                    }
                    if (e.Value != "")
                    {
                        if (Convert.ToInt32(e.Value) <= SoLuongNhan) // thỏa điều kiện thì mới cộng tổng
                        {
                            TongSoLuongTra += Convert.ToInt32(e.Value);
                            TongSoTienTra += SoTienPhaiTra;
                        }
                    }
                    txtTongSoVe.Text = TongSoLuongTra.ToString();
                    txtTongSoTien.Text = TongSoTienTra.ToString();
                }
            }
        }
        private void gvBASE_InvalidValueException(object sender, DevExpress.XtraEditors.Controls.InvalidValueExceptionEventArgs e)
        {
            if (gvBASE.FocusedColumn.FieldName == "SoVeTra")
            {
                if (e.Value as String == "")
                {
                    e.ErrorText = "Số vé trả không được rỗng";
                }
            }
        }

    }
}